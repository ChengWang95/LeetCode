//分而治之，时间复杂度nlog（n）

class Solution {
public:
    int maxSub(vector<int>& nums, int left, int right);
    
    int maxSubArray(vector<int>& nums) {
        if (nums.size() == 0) return 0;
        return maxSub(nums, 0, nums.size());
    }
    
    int maxSub(vector<int>& nums, int left, int right) {
        if (left == right+1)    return nums[left];
        int mid = (left + right) / 2;
        int max_l = maxSub(nums, left, mid);
        int max_r = maxSub(nums, mid, right);
        int max_m = nums[mid];
        int sum_m = max_m;
        for (int i = mid + 1; i<right; ++i) {
            if ((sum_m = sum_m + nums[i])>max_m) max_m = sum_m;
        }
        for (int i = mid - 1; i >= left; --i) {
            if ((sum_m = sum_m + nums[i])>max_m) max_m = sum_m;
        }
                int max = max_l>max_r ? max_l : max_r;
        max = max>max_m ? max : max_m;
        return max;
    }
    
};
