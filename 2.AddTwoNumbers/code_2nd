/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* cur1 = l1;
        ListNode* cur2 = l2;
        ListNode* l3 = new ListNode(0);
        ListNode* cur3 = l3;
        int chash = 0;
        while (cur1 || cur2){
            if (cur1 && cur2){
                int curNum = cur1->val+cur2->val + chash;
                if (curNum < 10){
                    chash = 0;
                }
                else{
                    chash = 1;
                    curNum -= 10;
                }
                ListNode* temp= new ListNode(curNum);
                cur3->next = temp;
                cur1 = cur1->next;
                cur2 = cur2->next;   
                cur3 = cur3->next;
            }
            else if (cur1){
                int curNum = cur1->val+ chash;
                if (curNum < 10){
                    chash = 0;
                }
                else{
                    chash = 1;
                    curNum -= 10;
                }
                ListNode* temp = new ListNode(curNum);
                cur3->next = temp;
                cur1 = cur1->next; 
                cur3 = cur3->next;
            }
            else{
                int curNum = cur2->val + chash;
                if (curNum < 10){
                    chash = 0;
                }
                else{
                    chash = 1;
                    curNum -= 10;
                }
                ListNode* temp = new ListNode(curNum);
                cur3->next = temp;
                cur2 = cur2->next; 
                cur3 = cur3->next;
            }
        }
        if (chash == 1){
            ListNode* temp = new ListNode(1);
            cur3->next = temp;
        }
        return l3->next;
    }
};
